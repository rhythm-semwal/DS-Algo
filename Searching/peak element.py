class Solution1:
    # @param A : list of integers
    # @return an integer
    def solve(self, A):
        start, end = 0, len(A)-1

        while start < end:
            mid = (start+end)//2

            #  if mid element is the peak element
            if A[mid] >= A[mid-1] and A[mid] >= A[mid+1]:
                return A[mid]
            # the peak element is on the left side
            elif A[mid-1] > A[mid]:
                end = mid-1
            # the peak element is on the right side
            else:
                start = mid+1

        return A[start]


class Solution3:  # leetcode - return index of peak element
    def findPeakElement(self, nums) -> int:
        low, high = 0, len(nums) - 1

        while low <= high:
            mid = (low + high) // 2

            if (mid == 0 or nums[mid] > nums[mid - 1]) and (mid == len(nums) - 1 or nums[mid] > nums[mid + 1]):
                return mid
            elif mid > 0 and nums[mid - 1] > nums[mid]:
                high = mid - 1
            else:
                low = mid + 1

        return high
class Solution2:
    def findPeakElement(self, nums) -> int:
        max_number = nums[0]
        index = 0

        for i in range(1, len(nums)):
            if i == len(nums) - 1:
                if nums[i] > nums[i - 1] and nums[i] > max_number:
                    max_number = nums[i]
                    index = i
            else:
                if nums[i] > nums[i - 1] and nums[i] > nums[i + 1] and nums[i] > max_number:
                    max_number = nums[i]
                    index = i

        return index


if __name__ == '__main__':
    # A = [1, 2, 3, 4, 5]
    # A = [1, 1000000000, 1000000000]
    A = [8, 15, 26, 70, 81, 91, 218, 225, 242, 298, 327, 331, 344, 352, 380, 418, 419, 420, 427, 443, 479, 485, 536, 539,
        614, 642, 656, 679, 686, 712, 713, 731, 745, 750, 763, 771, 794, 804, 808, 809, 828, 836, 878, 884, 886, 900,
        913, 995, 998, 1036, 1071, 1087, 1102, 1105, 1106, 1110, 1116, 1139, 1187, 1190, 1227, 1240, 1278, 1294, 1343,
        1394, 1435, 1445, 1491, 1513, 1523, 1539, 1566, 1568, 1593, 1622, 1625, 1684, 1743, 1766, 1782, 1818, 1832,
        1867, 1872, 1903, 1972, 1979, 1990, 1995, 2041, 2049, 2065, 2131, 2187, 2213, 2230, 2238, 2246, 2298, 2303,
        2326, 2390, 2401, 2420, 2446, 2459, 2467, 2484, 2520, 2581, 2622, 2644, 2654, 2730, 2736, 2759, 2807, 2842,
        2851, 2869, 2872, 2879, 2900, 2926, 2943, 2946, 2971, 2972, 2981, 3003, 3009, 3075, 3097, 3145, 3188, 3196,
        3206, 3208, 3242, 3274, 3301, 3346, 3357, 3381, 3393, 3412, 3414, 3460, 3541, 3551, 3569, 3572, 3631, 3652,
        3668, 3711, 3733, 3735, 3746, 3755, 3816, 3851, 3918, 3922, 3933, 3960, 3963, 3991, 4003, 4004, 4038, 4139,
        4189, 4205, 4282, 4299, 4355, 4358, 4375, 4419, 4451, 4453, 4466, 4499, 4535, 4536, 4592, 4607, 4645, 4648,
        4670, 4676, 4697, 4764, 4771, 4783, 4812, 4860, 4880, 4901, 4927, 4969, 5021, 5024, 5048, 5063, 5070, 5091,
        5121, 5129, 5164, 5167, 5172, 5202, 5215, 5360, 5392, 5410, 5412, 5415, 5465, 5542, 5579, 5583, 5661, 5665,
        5702, 5712, 5723, 5744, 5763, 5782, 5838, 5845, 5870, 5887, 5899, 6071, 6081, 6177, 6192, 6199, 6223, 6241,
        6244, 6247, 6254, 6364, 6370, 6386, 6387, 6388, 6393, 6396, 6433, 6465, 6494, 6558, 6559, 6560, 6562, 6593,
        6594, 6602, 6757, 6773, 6786, 6813, 6853, 6877, 6889, 6892, 6931, 6937, 6967, 7029, 7036, 7081, 7104, 7159,
        7232, 7276, 7289, 7293, 7332, 7345, 7360, 7381, 7384, 7400, 7419, 7429, 7433, 7462, 7485, 7487, 7496, 7499,
        7500, 7502, 7519, 7648, 7672, 7729, 7738, 7769, 7803, 7810, 7910, 7956, 7994, 8003, 8010, 8048, 8056, 8062,
        8068, 8079, 8131, 8136, 8192, 8203, 8229, 8247, 8251, 8281, 8292, 8351, 8370, 8380, 8388, 8394, 8427, 8446,
        8534, 8536, 8554, 8564, 8572, 8591, 8621, 8662, 8677, 8681, 8683, 8689, 8733, 8764, 8798, 8818, 8825, 8953,
        8966, 8977, 8982, 8990, 9009, 9011, 9026, 9045, 9085, 9170, 9181, 9199, 9200, 9220, 9239, 9242, 9243, 9294,
        9300, 9304, 9309, 9332, 9333, 9349, 9384, 9450, 9621, 9630, 9638, 9647, 9660, 9692, 9762, 9767, 9854, 9886,
        9901, 9991, 9873, 9855, 9795, 9731, 9700, 9665, 9649, 9632, 9605, 9548, 9539, 9505, 9483, 9478, 9458, 9416,
        9394, 9392, 9385, 9359, 9325, 9313, 9252, 9251, 9237, 9208, 9159, 9158, 9143, 9138, 9039, 9006, 9001, 8946,
        8934, 8816, 8815, 8804, 8777, 8774, 8773, 8718, 8714, 8656, 8631, 8607, 8592, 8563, 8437, 8416, 8408, 8393,
        8337, 8277, 8266, 8255, 8245, 8184, 8175, 8107, 8088, 8068, 8063, 8041, 8026, 8014, 7967, 7950, 7907, 7898,
        7830, 7772, 7768, 7763, 7749, 7745, 7740, 7683, 7633, 7548, 7540, 7539, 7453, 7434, 7320, 7315, 7282, 7265,
        7259, 7232, 7116, 7101, 7080, 7048, 7037, 6947, 6940, 6876, 6856, 6827, 6772, 6719, 6703, 6676, 6648, 6641,
        6576, 6572, 6557, 6478, 6477, 6337, 6310, 6304, 6302, 6200, 6144, 6083, 6082, 6057, 6013, 5907, 5896, 5894,
        5837, 5775, 5762, 5750, 5742, 5713, 5708, 5695, 5646, 5633, 5557, 5550, 5523, 5518, 5495, 5483, 5467, 5419,
        5361, 5354, 5339, 5331, 5326, 5325, 5312, 5306, 5270, 5257, 5209, 5187, 5155, 5149, 5140, 5109, 5014, 5012,
        5001, 4952, 4945, 4870, 4860, 4793, 4748, 4734, 4692, 4656, 4608, 4607, 4588, 4535, 4532, 4496, 4442, 4434,
        4413, 4388, 4377, 4348, 4342, 4284, 4279, 4244, 4189, 4179, 4169, 4167, 4155, 4114, 4080, 4077, 4070, 4048,
        4008, 3986, 3973, 3953, 3951, 3917, 3905, 3877, 3854, 3810, 3806, 3778, 3763, 3727, 3704, 3701, 3576, 3509,
        3508, 3477, 3468, 3397, 3382, 3337, 3317, 3281, 3279, 3224, 3204, 3166, 3155, 3142, 3128, 3098, 3081, 3024,
        2989, 2927, 2914, 2792, 2780, 2718, 2716, 2672, 2636, 2549, 2518, 2493, 2461, 2352, 2305, 2262, 2258, 2207,
        2189, 2149, 2090, 2074, 2043, 1958, 1921, 1887, 1873, 1867, 1746, 1738, 1591, 1578, 1443, 1405, 1373, 1308,
        1221, 1184, 1183, 1165, 1069, 1058, 1034, 1028, 1007, 1001, 927, 912, 904, 877, 853, 831, 796, 653, 622, 561,
        544, 542, 472, 464, 405, 385, 364, 326, 272, 255, 246, 187, 178, 151, 60, 55, 47, 32]

    print(Solution().solve(A))
